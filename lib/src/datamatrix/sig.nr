use std::collections::map::HashMap;
use std::hash::BuildHasherDefault;
use std::hash::poseidon2::Poseidon2Hasher;

pub struct PublicKey {
    pub x: [u8; 32],
    pub y: [u8; 32],
}

type CA_ID = [u8; 4];
type CERT_ID = [u8; 4];

global MAX_KEYS: u32 = 10;
type KEYS_MAP = HashMap<(CA_ID, CERT_ID), PublicKey, MAX_KEYS, BuildHasherDefault<Poseidon2Hasher>>;

pub global PUBLIC_KEYS: KEYS_MAP = public_keys();

pub fn verify_signature(signature: [u8; 64], data_hash: [u8; 32], public_key: PublicKey) {
    let valid_signature =
        std::ecdsa_secp256r1::verify_signature(public_key.x, public_key.y, signature, data_hash);
    assert(valid_signature);
}

pub fn get_public_key(ca_id: [u8; 4], cert_id: [u8; 4]) -> PublicKey {
    let key = PUBLIC_KEYS.get((ca_id, cert_id));
    assert(key.is_some());
    key.unwrap()
}

fn public_keys() -> KEYS_MAP {
    let mut keys: KEYS_MAP = HashMap::default();

    // keys.insert(("FR01".as_bytes(), "BYT0".as_bytes()), PublicKey { x: [109, 251, 71, 146, 221, 21, 225, 23, 54, 121, 239, 96, 203, 247, 157, 5, 10, 8, 13, 223, 126, 69, 145, 124, 119, 217, 147, 208, 239, 141, 193, 96], y: [248, 53, 56, 186, 247, 134, 172, 141, 234, 127, 218, 32, 196, 4, 138, 237, 46, 202, 135, 72, 250, 11, 119, 24, 226, 162, 214, 9, 41, 174, 199, 7] });
    // keys.insert(("FR01".as_bytes(), "0000".as_bytes()), PublicKey { x: [11, 191, 25, 60, 177, 43, 72, 24, 207, 149, 132, 149, 172, 75, 67, 144, 59, 49, 66, 119, 226, 6, 251, 30, 125, 71, 245, 6, 161, 104, 57, 5], y: [32, 164, 59, 158, 228, 30, 193, 17, 234, 21, 193, 10, 16, 160, 116, 42, 150, 71, 13, 156, 101, 183, 32, 251, 166, 236, 217, 71, 61, 205, 57, 4] });
    // keys.insert(("FR01".as_bytes(), "SFR2".as_bytes()), PublicKey { x: [255, 82, 24, 202, 112, 105, 16, 221, 16, 140, 87, 191, 217, 11, 109, 175, 108, 67, 85, 124, 30, 160, 153, 0, 176, 16, 66, 216, 50, 149, 13, 89], y: [141, 189, 62, 112, 71, 52, 84, 69, 186, 167, 169, 88, 240, 39, 87, 185, 22, 143, 201, 225, 248, 174, 79, 100, 41, 31, 231, 83, 253, 131, 130, 20] });
    // keys.insert(("FR01".as_bytes(), "DJI1".as_bytes()), PublicKey { x: [180, 104, 158, 14, 147, 191, 14, 142, 164, 32, 132, 84, 91, 60, 225, 7, 39, 230, 108, 41, 36, 205, 122, 199, 175, 17, 117, 159, 119, 169, 255, 61], y: [87, 85, 146, 221, 17, 107, 84, 164, 41, 167, 65, 99, 93, 122, 237, 207, 65, 108, 34, 235, 171, 140, 27, 51, 189, 54, 9, 125, 244, 14, 145, 142] });
    // keys.insert(("FR01".as_bytes(), "DJI2".as_bytes()), PublicKey { x: [101, 103, 187, 71, 128, 147, 183, 91, 4, 131, 66, 235, 147, 142, 28, 35, 99, 171, 208, 178, 67, 57, 118, 171, 27, 245, 19, 255, 139, 77, 69, 131], y: [101, 103, 150, 47, 193, 41, 70, 111, 111, 108, 73, 125, 69, 58, 103, 46, 129, 202, 173, 86, 154, 215, 133, 23, 36, 126, 105, 71, 59, 239, 234, 233] });
    // keys.insert(("FR03".as_bytes(), "GSK1".as_bytes()), PublicKey { x: [78, 224, 146, 245, 83, 170, 217, 177, 25, 245, 15, 109, 177, 229, 158, 139, 238, 214, 100, 39, 49, 157, 135, 212, 237, 133, 165, 85, 33, 233, 21, 62], y: [213, 200, 94, 10, 39, 139, 143, 219, 227, 3, 206, 154, 145, 14, 19, 54, 254, 227, 13, 223, 14, 49, 144, 55, 44, 128, 137, 224, 246, 168, 82, 33] });
    // keys.insert(("FR03".as_bytes(), "ENG2".as_bytes()), PublicKey { x: [112, 143, 83, 116, 26, 26, 97, 196, 61, 118, 53, 195, 249, 12, 158, 138, 243, 56, 249, 252, 78, 102, 180, 210, 9, 179, 42, 221, 92, 31, 213, 80], y: [60, 196, 26, 113, 135, 124, 121, 134, 123, 38, 5, 184, 90, 201, 207, 139, 250, 109, 175, 209, 115, 29, 146, 128, 68, 34, 172, 245, 116, 142, 210, 183] });
    // keys.insert(("FR03".as_bytes(), "GSK2".as_bytes()), PublicKey { x: [86, 187, 171, 44, 248, 60, 181, 215, 33, 91, 181, 132, 98, 247, 184, 195, 169, 11, 57, 3, 119, 210, 0, 32, 218, 133, 184, 132, 131, 43, 162, 191], y: [66, 6, 15, 72, 234, 49, 80, 245, 204, 89, 158, 84, 144, 156, 90, 60, 225, 127, 17, 250, 100, 188, 104, 186, 95, 202, 10, 211, 48, 148, 116, 0] });
    // keys.insert(("FR03".as_bytes(), "EDFA".as_bytes()), PublicKey { x: [102, 19, 37, 160, 143, 180, 1, 245, 80, 4, 208, 200, 201, 189, 115, 240, 102, 203, 15, 255, 190, 74, 100, 211, 255, 171, 74, 231, 125, 201, 250, 143], y: [252, 95, 94, 114, 148, 41, 23, 99, 132, 64, 254, 83, 103, 246, 154, 15, 116, 236, 129, 198, 34, 23, 48, 109, 145, 144, 231, 163, 52, 174, 34, 47] });
    // keys.insert(("FR03".as_bytes(), "SUE0".as_bytes()), PublicKey { x: [113, 226, 75, 7, 243, 93, 205, 144, 146, 215, 212, 239, 144, 228, 70, 229, 195, 163, 90, 106, 134, 127, 192, 158, 102, 18, 19, 67, 248, 86, 47, 242], y: [141, 231, 117, 38, 15, 139, 147, 25, 190, 142, 237, 37, 254, 16, 16, 108, 182, 241, 182, 246, 221, 168, 195, 109, 214, 167, 15, 116, 102, 177, 114, 220] });
    // keys.insert(("FR03".as_bytes(), "HER2".as_bytes()), PublicKey { x: [97, 200, 254, 146, 73, 3, 102, 20, 181, 90, 100, 128, 194, 25, 92, 86, 21, 193, 131, 55, 105, 208, 186, 168, 18, 198, 178, 32, 194, 98, 194, 60], y: [21, 208, 115, 112, 69, 127, 238, 152, 23, 108, 208, 141, 195, 51, 241, 24, 175, 115, 63, 27, 168, 168, 205, 113, 69, 158, 154, 140, 140, 55, 243, 99] });
    // keys.insert(("FR03".as_bytes(), "DSR6".as_bytes()), PublicKey { x: [51, 124, 2, 206, 89, 5, 199, 132, 199, 77, 193, 188, 194, 12, 234, 249, 2, 13, 204, 30, 240, 168, 131, 192, 173, 82, 180, 100, 203, 70, 149, 87], y: [248, 111, 189, 219, 197, 93, 82, 23, 167, 216, 120, 206, 76, 119, 116, 23, 229, 84, 179, 211, 38, 35, 195, 104, 226, 233, 167, 108, 247, 196, 171, 69] });
    // keys.insert(("FR03".as_bytes(), "EDFB".as_bytes()), PublicKey { x: [250, 154, 152, 233, 88, 217, 97, 172, 76, 166, 197, 68, 117, 151, 22, 103, 102, 255, 8, 175, 85, 41, 88, 114, 219, 230, 217, 230, 253, 79, 131, 46], y: [34, 118, 91, 1, 213, 196, 124, 242, 167, 138, 118, 93, 42, 87, 50, 107, 133, 2, 182, 76, 65, 165, 250, 117, 46, 105, 253, 164, 5, 234, 34, 175] });
    // keys.insert(("FR03".as_bytes(), "ONI0".as_bytes()), PublicKey { x: [36, 214, 36, 141, 202, 215, 88, 252, 208, 167, 109, 171, 115, 193, 148, 254, 226, 129, 192, 35, 18, 234, 47, 186, 107, 206, 90, 26, 146, 11, 88, 77], y: [66, 189, 28, 75, 163, 6, 68, 233, 60, 211, 24, 49, 220, 2, 49, 63, 70, 33, 230, 39, 125, 138, 128, 248, 174, 239, 177, 217, 29, 165, 68, 59] });
    // keys.insert(("FR03".as_bytes(), "BOU2".as_bytes()), PublicKey { x: [156, 31, 95, 161, 31, 60, 170, 205, 191, 99, 68, 236, 69, 247, 45, 106, 19, 57, 127, 6, 199, 73, 178, 234, 207, 33, 233, 137, 96, 168, 30, 4], y: [123, 85, 148, 52, 246, 252, 77, 75, 247, 3, 108, 141, 25, 54, 197, 236, 32, 167, 157, 252, 145, 15, 231, 222, 41, 101, 241, 91, 106, 91, 203, 133] });
    // keys.insert(("FR03".as_bytes(), "AXA1".as_bytes()), PublicKey { x: [158, 231, 111, 31, 147, 195, 116, 163, 223, 234, 104, 3, 119, 6, 134, 115, 172, 174, 242, 74, 195, 122, 106, 249, 105, 228, 101, 130, 28, 97, 102, 82], y: [63, 94, 31, 86, 108, 234, 131, 212, 120, 182, 16, 180, 209, 97, 105, 169, 14, 97, 31, 184, 225, 41, 214, 110, 41, 86, 100, 190, 94, 191, 139, 140] });
    // keys.insert(("FR03".as_bytes(), "THA2".as_bytes()), PublicKey { x: [195, 124, 109, 46, 173, 56, 110, 116, 3, 181, 78, 35, 63, 53, 204, 66, 222, 50, 162, 160, 9, 154, 66, 45, 75, 115, 87, 237, 223, 17, 225, 73], y: [3, 121, 187, 118, 119, 70, 205, 186, 82, 4, 115, 229, 67, 59, 174, 111, 75, 180, 231, 6, 172, 32, 173, 153, 241, 155, 226, 149, 169, 63, 67, 232] });
    // keys.insert(("FR03".as_bytes(), "CTL0".as_bytes()), PublicKey { x: [109, 30, 114, 16, 240, 91, 44, 6, 126, 35, 84, 247, 47, 98, 208, 223, 113, 75, 61, 2, 124, 193, 154, 231, 67, 65, 213, 162, 47, 177, 11, 110], y: [67, 14, 48, 119, 190, 227, 54, 246, 39, 128, 23, 46, 145, 156, 79, 204, 100, 140, 161, 193, 73, 223, 208, 225, 168, 180, 112, 252, 142, 108, 235, 137] });
    // keys.insert(("FR03".as_bytes(), "BOU0".as_bytes()), PublicKey { x: [169, 143, 139, 55, 94, 194, 152, 101, 12, 102, 206, 69, 238, 97, 93, 61, 2, 135, 148, 197, 212, 43, 170, 29, 74, 10, 45, 170, 183, 130, 176, 55], y: [27, 103, 229, 181, 104, 49, 74, 116, 230, 145, 97, 149, 194, 93, 152, 218, 49, 160, 73, 5, 46, 162, 228, 219, 104, 100, 92, 235, 110, 194, 194, 245] });
    // keys.insert(("FR03".as_bytes(), "EDF3".as_bytes()), PublicKey { x: [101, 96, 140, 58, 97, 220, 45, 117, 79, 222, 4, 95, 222, 171, 2, 136, 120, 223, 140, 129, 201, 253, 156, 203, 22, 100, 87, 32, 233, 133, 38, 19], y: [74, 44, 69, 254, 212, 228, 197, 67, 208, 50, 34, 98, 162, 73, 147, 236, 246, 191, 115, 159, 110, 4, 68, 95, 25, 79, 163, 142, 144, 140, 184, 123] });
    // keys.insert(("FR03".as_bytes(), "ITS0".as_bytes()), PublicKey { x: [78, 166, 85, 183, 210, 64, 234, 160, 176, 1, 185, 61, 134, 87, 105, 217, 185, 225, 239, 241, 141, 236, 89, 75, 227, 82, 240, 216, 88, 222, 253, 135], y: [78, 1, 194, 199, 44, 197, 143, 203, 143, 206, 189, 133, 31, 104, 113, 117, 167, 93, 74, 10, 48, 213, 67, 181, 32, 170, 178, 142, 33, 142, 171, 55] });
    // keys.insert(("FR03".as_bytes(), "AIG0".as_bytes()), PublicKey { x: [73, 3, 129, 251, 32, 142, 255, 143, 39, 133, 177, 68, 154, 76, 170, 132, 106, 194, 8, 15, 254, 21, 253, 91, 106, 120, 106, 135, 10, 137, 54, 203], y: [23, 85, 48, 111, 194, 153, 182, 211, 230, 100, 18, 159, 246, 17, 102, 249, 24, 189, 233, 60, 50, 81, 53, 145, 68, 49, 128, 78, 80, 54, 225, 246] });
    // keys.insert(("FR03".as_bytes(), "CRC5".as_bytes()), PublicKey { x: [78, 243, 255, 91, 63, 5, 136, 12, 202, 214, 209, 88, 18, 128, 20, 149, 50, 52, 71, 30, 88, 178, 239, 208, 3, 64, 242, 134, 134, 49, 95, 139], y: [67, 108, 118, 180, 3, 83, 223, 148, 64, 157, 92, 71, 103, 193, 94, 98, 78, 76, 167, 150, 161, 116, 233, 132, 181, 135, 154, 208, 171, 173, 69, 52] });
    // keys.insert(("FR03".as_bytes(), "THA0".as_bytes()), PublicKey { x: [136, 86, 66, 228, 239, 74, 104, 162, 254, 115, 34, 113, 78, 8, 196, 167, 28, 173, 131, 243, 32, 115, 98, 38, 63, 151, 141, 189, 100, 18, 126, 108], y: [232, 32, 12, 125, 64, 149, 223, 179, 144, 12, 164, 17, 169, 64, 137, 105, 122, 194, 40, 2, 2, 152, 37, 23, 100, 112, 85, 86, 138, 175, 126, 232] });
    // keys.insert(("FR03".as_bytes(), "HFS0".as_bytes()), PublicKey { x: [154, 50, 134, 10, 75, 129, 219, 204, 183, 183, 23, 108, 252, 239, 83, 128, 186, 26, 242, 213, 74, 81, 162, 201, 44, 70, 65, 84, 116, 212, 104, 10], y: [107, 19, 166, 23, 41, 19, 46, 241, 49, 41, 71, 242, 59, 1, 215, 15, 41, 42, 255, 147, 111, 57, 230, 43, 54, 94, 12, 130, 177, 206, 58, 14] });
    // keys.insert(("FR03".as_bytes(), "SPE0".as_bytes()), PublicKey { x: [235, 184, 242, 112, 79, 101, 75, 175, 36, 226, 122, 100, 214, 185, 174, 29, 189, 29, 215, 132, 210, 115, 30, 162, 1, 222, 194, 73, 167, 41, 235, 253], y: [196, 236, 65, 226, 155, 131, 216, 177, 201, 172, 242, 153, 43, 238, 26, 86, 194, 239, 186, 16, 175, 78, 151, 90, 21, 234, 132, 101, 109, 186, 104, 116] });
    // keys.insert(("FR03".as_bytes(), "SOP0".as_bytes()), PublicKey { x: [95, 183, 88, 142, 212, 104, 44, 118, 182, 175, 115, 32, 71, 237, 131, 16, 205, 183, 18, 65, 86, 235, 83, 243, 2, 44, 214, 141, 70, 59, 20, 185], y: [254, 129, 46, 98, 201, 164, 124, 146, 159, 194, 123, 157, 211, 14, 36, 21, 10, 237, 215, 141, 150, 198, 94, 2, 60, 88, 136, 207, 37, 101, 168, 20] });
    // keys.insert(("FR03".as_bytes(), "BDF0".as_bytes()), PublicKey { x: [199, 9, 189, 64, 104, 54, 131, 177, 67, 81, 96, 54, 215, 114, 153, 112, 44, 14, 196, 169, 111, 4, 128, 202, 13, 77, 161, 181, 253, 18, 6, 28], y: [227, 178, 254, 24, 199, 69, 90, 136, 200, 163, 123, 104, 57, 27, 151, 212, 215, 24, 153, 253, 104, 58, 246, 11, 73, 119, 143, 207, 71, 110, 20, 248] });
    // keys.insert(("FR03".as_bytes(), "CNO0".as_bytes()), PublicKey { x: [21, 206, 209, 1, 198, 193, 90, 43, 229, 75, 89, 102, 229, 182, 238, 236, 219, 242, 4, 16, 40, 203, 123, 99, 38, 201, 155, 228, 225, 212, 122, 172], y: [37, 130, 225, 102, 8, 12, 81, 101, 45, 38, 8, 65, 66, 231, 200, 1, 28, 80, 220, 164, 213, 2, 62, 200, 11, 108, 238, 154, 14, 71, 36, 6] });
    // keys.insert(("FR03".as_bytes(), "DHL0".as_bytes()), PublicKey { x: [180, 92, 40, 202, 186, 16, 106, 245, 107, 139, 87, 247, 88, 127, 179, 4, 222, 149, 216, 20, 111, 111, 239, 179, 125, 11, 35, 83, 29, 40, 101, 95], y: [205, 137, 36, 52, 213, 190, 203, 152, 175, 166, 13, 230, 175, 236, 22, 77, 82, 129, 13, 98, 7, 201, 93, 221, 216, 154, 63, 166, 254, 221, 135, 50] });
    // keys.insert(("FR03".as_bytes(), "EEN0".as_bytes()), PublicKey { x: [4, 95, 246, 179, 13, 73, 37, 243, 198, 21, 114, 98, 100, 6, 184, 222, 139, 155, 106, 170, 105, 56, 238, 187, 216, 137, 232, 14, 87, 30, 20, 43], y: [130, 184, 229, 106, 235, 49, 224, 109, 123, 64, 156, 158, 64, 209, 166, 214, 103, 36, 242, 61, 169, 232, 119, 10, 241, 58, 227, 5, 229, 181, 71, 185] });
    // keys.insert(("FR03".as_bytes(), "BSI0".as_bytes()), PublicKey { x: [100, 128, 28, 175, 22, 41, 133, 65, 86, 147, 238, 140, 169, 132, 59, 8, 156, 197, 247, 92, 50, 65, 56, 71, 67, 94, 37, 92, 123, 221, 88, 194], y: [227, 13, 79, 96, 180, 89, 92, 205, 121, 179, 149, 84, 145, 68, 24, 145, 210, 156, 106, 236, 31, 204, 90, 250, 215, 205, 142, 105, 199, 82, 46, 125] });
    // keys.insert(("FR03".as_bytes(), "AGR1".as_bytes()), PublicKey { x: [208, 125, 16, 23, 221, 9, 254, 28, 144, 15, 1, 24, 156, 208, 181, 72, 11, 106, 204, 85, 153, 210, 202, 57, 50, 200, 237, 118, 141, 61, 135, 35], y: [154, 116, 205, 221, 43, 178, 253, 35, 170, 213, 54, 253, 39, 4, 139, 177, 191, 4, 153, 105, 224, 253, 34, 187, 108, 70, 78, 48, 225, 251, 149, 236] });
    // keys.insert(("FR03".as_bytes(), "CIB0".as_bytes()), PublicKey { x: [182, 6, 102, 23, 26, 152, 211, 7, 94, 169, 92, 246, 21, 178, 198, 123, 140, 39, 145, 226, 8, 64, 105, 223, 193, 77, 204, 232, 147, 174, 183, 194], y: [67, 127, 178, 255, 218, 225, 57, 74, 11, 100, 242, 145, 250, 179, 216, 222, 162, 74, 51, 149, 211, 247, 2, 57, 4, 97, 126, 255, 53, 129, 30, 15] });
    // keys.insert(("FR03".as_bytes(), "CRC2".as_bytes()), PublicKey { x: [193, 246, 43, 13, 134, 222, 8, 221, 37, 156, 220, 38, 226, 236, 89, 244, 84, 160, 162, 250, 100, 167, 254, 8, 251, 84, 1, 234, 13, 96, 199, 179], y: [136, 107, 49, 221, 14, 224, 55, 58, 98, 4, 177, 124, 1, 51, 66, 236, 146, 47, 70, 134, 158, 114, 174, 196, 65, 98, 184, 211, 203, 19, 101, 42] });
    // keys.insert(("FR03".as_bytes(), "SNC0".as_bytes()), PublicKey { x: [103, 158, 240, 173, 201, 140, 89, 63, 135, 172, 184, 111, 40, 91, 8, 24, 180, 104, 114, 39, 5, 141, 83, 192, 88, 197, 115, 148, 141, 194, 93, 195], y: [96, 215, 151, 27, 144, 95, 110, 16, 126, 117, 200, 80, 84, 115, 188, 158, 18, 181, 45, 193, 116, 131, 178, 154, 98, 182, 160, 3, 254, 153, 39, 9] });
    // keys.insert(("FR03".as_bytes(), "SNC1".as_bytes()), PublicKey { x: [220, 116, 104, 43, 141, 234, 23, 70, 188, 130, 126, 115, 127, 188, 109, 74, 29, 172, 194, 83, 183, 71, 195, 114, 77, 94, 123, 164, 16, 53, 22, 255], y: [254, 146, 245, 120, 220, 133, 234, 242, 227, 157, 17, 152, 128, 215, 117, 236, 62, 206, 41, 119, 162, 221, 29, 60, 239, 2, 23, 247, 119, 217, 142, 149] });
    // keys.insert(("FR03".as_bytes(), "CNO1".as_bytes()), PublicKey { x: [132, 97, 112, 124, 47, 214, 153, 225, 135, 239, 241, 218, 42, 53, 59, 253, 115, 240, 98, 167, 222, 21, 56, 162, 165, 36, 154, 104, 233, 24, 228, 72], y: [78, 37, 199, 149, 190, 15, 204, 98, 84, 78, 174, 99, 40, 28, 198, 157, 113, 215, 192, 202, 145, 103, 125, 109, 85, 146, 25, 228, 182, 87, 237, 106] });
    // keys.insert(("FR03".as_bytes(), "TES0".as_bytes()), PublicKey { x: [134, 242, 15, 166, 50, 69, 67, 195, 36, 134, 155, 99, 166, 23, 55, 138, 108, 2, 89, 248, 124, 235, 52, 64, 43, 36, 110, 1, 228, 78, 9, 141], y: [8, 132, 19, 83, 18, 15, 202, 215, 47, 130, 254, 194, 38, 233, 44, 70, 6, 95, 107, 113, 97, 195, 141, 137, 222, 85, 138, 160, 222, 31, 10, 80] });
    // keys.insert(("FR03".as_bytes(), "CNO2".as_bytes()), PublicKey { x: [49, 141, 125, 193, 177, 43, 239, 123, 179, 252, 95, 138, 102, 200, 46, 239, 30, 250, 167, 116, 125, 194, 225, 202, 78, 161, 187, 154, 251, 168, 10, 207], y: [230, 101, 226, 230, 171, 226, 2, 65, 117, 52, 171, 215, 195, 158, 223, 204, 91, 189, 85, 79, 163, 97, 52, 199, 96, 199, 196, 166, 28, 16, 244, 137] });
    // keys.insert(("FR03".as_bytes(), "EDF4".as_bytes()), PublicKey { x: [122, 5, 28, 223, 65, 165, 131, 106, 164, 106, 192, 21, 122, 77, 20, 68, 33, 31, 185, 230, 38, 97, 39, 94, 201, 244, 155, 84, 149, 212, 9, 201], y: [97, 183, 182, 150, 90, 230, 101, 250, 81, 184, 61, 210, 218, 32, 164, 7, 70, 15, 68, 227, 82, 162, 164, 161, 70, 112, 148, 53, 75, 248, 137, 181] });
    // keys.insert(("FR03".as_bytes(), "EDF5".as_bytes()), PublicKey { x: [206, 86, 230, 169, 12, 185, 245, 203, 243, 236, 130, 83, 243, 219, 141, 174, 32, 209, 11, 19, 120, 15, 72, 58, 150, 198, 180, 180, 135, 32, 95, 77], y: [12, 1, 218, 7, 236, 102, 148, 11, 122, 25, 231, 219, 0, 41, 192, 62, 44, 79, 50, 118, 167, 218, 22, 133, 183, 93, 73, 190, 107, 246, 118, 216] });
    // keys.insert(("FR03".as_bytes(), "CAI1".as_bytes()), PublicKey { x: [19, 232, 251, 116, 115, 222, 29, 163, 193, 53, 1, 175, 240, 67, 5, 122, 115, 82, 147, 144, 199, 241, 133, 102, 249, 200, 4, 23, 95, 16, 202, 205], y: [130, 231, 191, 236, 188, 237, 34, 55, 114, 208, 110, 172, 238, 35, 25, 42, 82, 186, 234, 33, 108, 57, 46, 178, 205, 64, 169, 161, 67, 74, 62, 169] });
    // keys.insert(("FR03".as_bytes(), "CRC3".as_bytes()), PublicKey { x: [159, 238, 179, 114, 55, 30, 21, 42, 34, 148, 143, 130, 164, 90, 75, 74, 57, 204, 197, 158, 230, 233, 145, 121, 235, 8, 182, 41, 41, 61, 119, 182], y: [91, 50, 191, 53, 127, 172, 204, 12, 49, 226, 194, 13, 17, 10, 223, 2, 130, 11, 223, 119, 97, 49, 7, 92, 5, 195, 194, 134, 74, 27, 96, 4] });
    // keys.insert(("FR03".as_bytes(), "GSK0".as_bytes()), PublicKey { x: [69, 21, 203, 116, 186, 121, 14, 230, 58, 238, 240, 129, 51, 1, 146, 127, 32, 217, 252, 78, 71, 120, 240, 96, 130, 58, 145, 76, 48, 122, 178, 179], y: [248, 250, 62, 107, 142, 17, 164, 27, 134, 42, 115, 116, 113, 35, 129, 249, 130, 153, 251, 111, 205, 157, 10, 253, 13, 207, 93, 188, 166, 60, 47, 235] });
    // keys.insert(("FR03".as_bytes(), "EDF6".as_bytes()), PublicKey { x: [173, 140, 120, 211, 94, 51, 107, 207, 204, 227, 209, 89, 90, 235, 242, 61, 23, 91, 107, 6, 251, 74, 62, 145, 138, 139, 178, 216, 233, 18, 30, 238], y: [40, 92, 234, 153, 238, 83, 49, 146, 192, 136, 63, 224, 155, 243, 233, 118, 2, 155, 171, 228, 101, 100, 99, 124, 22, 126, 207, 70, 220, 23, 126, 164] });
    // keys.insert(("FR03".as_bytes(), "ENG1".as_bytes()), PublicKey { x: [64, 27, 248, 103, 193, 218, 103, 156, 113, 2, 60, 72, 128, 117, 142, 139, 215, 53, 160, 184, 190, 50, 138, 200, 31, 219, 197, 185, 212, 172, 112, 144], y: [156, 136, 209, 18, 26, 122, 133, 233, 146, 13, 184, 206, 191, 137, 168, 103, 75, 81, 50, 221, 52, 104, 127, 166, 164, 168, 176, 78, 245, 207, 154, 103] });
    // keys.insert(("FR03".as_bytes(), "CAQ1".as_bytes()), PublicKey { x: [1, 243, 42, 1, 219, 164, 75, 72, 239, 51, 234, 143, 84, 145, 218, 124, 146, 98, 208, 208, 39, 113, 192, 3, 24, 69, 219, 211, 137, 10, 60, 86], y: [38, 49, 87, 135, 26, 190, 238, 254, 250, 195, 60, 217, 193, 185, 63, 22, 41, 37, 88, 39, 250, 237, 245, 165, 58, 185, 81, 57, 14, 106, 78, 247] });
    // keys.insert(("FR03".as_bytes(), "CCL1".as_bytes()), PublicKey { x: [116, 3, 199, 240, 3, 125, 168, 109, 3, 83, 162, 138, 143, 163, 149, 58, 244, 54, 60, 96, 208, 55, 26, 203, 209, 74, 167, 232, 17, 60, 124, 190], y: [209, 249, 25, 17, 34, 148, 76, 130, 171, 77, 28, 89, 125, 209, 54, 12, 110, 240, 235, 237, 115, 247, 84, 253, 195, 187, 36, 136, 39, 51, 130, 237] });
    // keys.insert(("FR03".as_bytes(), "ENE1".as_bytes()), PublicKey { x: [71, 162, 241, 47, 40, 213, 100, 116, 124, 248, 105, 106, 191, 27, 80, 236, 213, 48, 80, 217, 123, 22, 222, 46, 129, 168, 53, 104, 41, 200, 254, 26], y: [40, 146, 80, 73, 176, 180, 92, 35, 188, 98, 196, 197, 102, 108, 219, 60, 70, 26, 104, 156, 55, 215, 242, 116, 169, 117, 85, 108, 177, 158, 17, 129] });
    // keys.insert(("FR03".as_bytes(), "AXA0".as_bytes()), PublicKey { x: [69, 146, 204, 142, 42, 158, 7, 56, 113, 168, 43, 25, 216, 242, 198, 122, 200, 123, 52, 74, 79, 33, 48, 199, 185, 24, 33, 216, 169, 55, 66, 107], y: [36, 85, 127, 153, 187, 152, 29, 67, 189, 161, 11, 101, 189, 221, 240, 210, 111, 9, 46, 131, 27, 65, 245, 71, 198, 29, 136, 21, 230, 246, 189, 35] });
    // keys.insert(("FR03".as_bytes(), "HER1".as_bytes()), PublicKey { x: [205, 201, 13, 156, 186, 218, 203, 93, 113, 3, 154, 5, 18, 23, 141, 156, 253, 165, 20, 49, 248, 84, 87, 32, 159, 172, 235, 244, 246, 192, 157, 68], y: [1, 230, 200, 202, 98, 134, 96, 142, 163, 100, 115, 193, 88, 233, 155, 61, 41, 85, 162, 177, 112, 239, 213, 215, 197, 69, 186, 183, 79, 235, 87, 39] });
    // keys.insert(("FR03".as_bytes(), "CNS1".as_bytes()), PublicKey { x: [193, 175, 182, 181, 237, 206, 93, 157, 183, 158, 174, 161, 30, 215, 51, 237, 230, 166, 74, 47, 243, 204, 81, 112, 156, 72, 188, 4, 118, 80, 117, 61], y: [49, 155, 207, 231, 102, 233, 124, 192, 197, 48, 80, 162, 94, 168, 200, 222, 172, 138, 42, 97, 29, 117, 52, 92, 118, 125, 227, 18, 39, 83, 111, 51] });
    // keys.insert(("FR03".as_bytes(), "DSR0".as_bytes()), PublicKey { x: [6, 173, 110, 255, 3, 104, 162, 213, 96, 164, 24, 141, 189, 21, 186, 45, 38, 76, 131, 254, 24, 112, 124, 157, 122, 14, 96, 91, 7, 165, 249, 52], y: [229, 158, 153, 63, 204, 64, 240, 114, 159, 250, 64, 84, 10, 208, 198, 166, 176, 25, 242, 248, 20, 112, 21, 65, 135, 87, 203, 97, 55, 172, 166, 182] });
    // keys.insert(("FR03".as_bytes(), "EDF7".as_bytes()), PublicKey { x: [98, 201, 46, 74, 10, 190, 133, 152, 167, 220, 150, 119, 152, 190, 226, 162, 101, 4, 3, 76, 213, 219, 112, 172, 174, 219, 95, 252, 20, 179, 196, 71], y: [48, 193, 112, 218, 39, 165, 85, 29, 20, 88, 56, 59, 121, 137, 6, 102, 17, 53, 221, 233, 7, 121, 206, 74, 213, 61, 219, 175, 9, 219, 203, 190] });
    // keys.insert(("FR03".as_bytes(), "BOU1".as_bytes()), PublicKey { x: [232, 27, 254, 194, 48, 64, 13, 175, 40, 180, 175, 183, 204, 191, 108, 152, 54, 226, 209, 56, 50, 109, 208, 164, 151, 119, 4, 212, 9, 20, 113, 224], y: [120, 73, 224, 60, 145, 162, 212, 7, 69, 135, 205, 60, 77, 138, 192, 239, 200, 249, 183, 86, 240, 109, 215, 18, 186, 178, 159, 51, 194, 18, 76, 251] });
    // keys.insert(("FR03".as_bytes(), "CRC6".as_bytes()), PublicKey { x: [159, 243, 2, 21, 81, 74, 249, 108, 33, 116, 107, 193, 162, 200, 16, 238, 200, 79, 6, 135, 136, 62, 23, 167, 93, 126, 58, 202, 79, 151, 143, 246], y: [214, 202, 105, 61, 253, 204, 114, 183, 21, 228, 79, 85, 162, 194, 166, 142, 159, 83, 54, 4, 26, 27, 79, 229, 177, 204, 39, 193, 131, 47, 156, 71] });
    // keys.insert(("FR03".as_bytes(), "ITS1".as_bytes()), PublicKey { x: [147, 89, 168, 238, 89, 126, 16, 175, 53, 198, 50, 79, 54, 70, 132, 20, 133, 15, 82, 209, 137, 180, 225, 170, 129, 120, 104, 138, 222, 129, 51, 38], y: [140, 108, 130, 98, 120, 192, 87, 183, 37, 31, 169, 6, 208, 43, 130, 154, 94, 74, 161, 210, 190, 205, 221, 162, 246, 208, 172, 249, 37, 87, 144, 9] });
    // keys.insert(("FR03".as_bytes(), "THA1".as_bytes()), PublicKey { x: [65, 238, 17, 106, 144, 142, 91, 165, 30, 150, 245, 127, 153, 65, 35, 23, 160, 197, 205, 254, 15, 175, 79, 64, 159, 90, 154, 203, 203, 7, 200, 221], y: [159, 233, 141, 200, 64, 131, 103, 58, 73, 243, 130, 154, 214, 16, 108, 49, 41, 33, 70, 157, 67, 92, 194, 144, 251, 113, 171, 188, 52, 240, 174, 105] });
    // keys.insert(("FR03".as_bytes(), "HFS1".as_bytes()), PublicKey { x: [91, 51, 133, 210, 248, 179, 10, 95, 43, 42, 122, 150, 72, 162, 85, 42, 95, 243, 16, 184, 82, 59, 243, 155, 42, 71, 170, 103, 16, 33, 249, 160], y: [103, 221, 52, 81, 45, 57, 115, 120, 237, 73, 115, 65, 71, 194, 60, 200, 125, 148, 18, 185, 66, 126, 43, 7, 66, 242, 247, 189, 162, 239, 125, 65] });
    // keys.insert(("FR03".as_bytes(), "CFR0".as_bytes()), PublicKey { x: [241, 107, 195, 63, 146, 94, 155, 145, 108, 18, 82, 19, 77, 4, 36, 13, 176, 183, 3, 142, 135, 174, 192, 137, 115, 15, 69, 48, 200, 99, 176, 187], y: [213, 147, 195, 114, 58, 202, 204, 77, 122, 148, 218, 199, 111, 217, 228, 201, 94, 130, 141, 209, 212, 253, 199, 4, 48, 132, 131, 87, 166, 120, 152, 0] });
    // keys.insert(("FR03".as_bytes(), "SOP1".as_bytes()), PublicKey { x: [119, 29, 174, 124, 56, 98, 46, 120, 143, 95, 225, 183, 148, 93, 154, 178, 122, 146, 156, 85, 24, 122, 121, 73, 68, 232, 14, 136, 2, 237, 60, 102], y: [111, 7, 40, 140, 240, 20, 176, 24, 152, 43, 44, 28, 93, 205, 91, 0, 176, 95, 144, 238, 239, 109, 1, 204, 199, 20, 52, 73, 10, 122, 154, 234] });
    // keys.insert(("FR03".as_bytes(), "CDS0".as_bytes()), PublicKey { x: [208, 50, 32, 116, 240, 18, 182, 70, 139, 238, 119, 157, 39, 97, 116, 217, 107, 130, 79, 241, 111, 236, 88, 7, 113, 124, 88, 190, 49, 145, 20, 21], y: [145, 248, 224, 143, 233, 13, 3, 140, 244, 85, 225, 170, 185, 41, 120, 91, 195, 169, 184, 177, 220, 122, 83, 33, 84, 103, 125, 17, 7, 202, 250, 80] });
    // keys.insert(("FR03".as_bytes(), "DGD1".as_bytes()), PublicKey { x: [104, 38, 178, 166, 142, 76, 3, 146, 45, 192, 141, 189, 23, 132, 197, 242, 228, 194, 40, 178, 33, 131, 189, 166, 228, 186, 118, 203, 49, 127, 115, 151], y: [83, 149, 50, 241, 233, 113, 33, 31, 89, 248, 126, 32, 45, 241, 133, 244, 230, 167, 167, 183, 101, 177, 92, 42, 90, 217, 206, 167, 116, 233, 64, 112] });
    // keys.insert(("FR03".as_bytes(), "DGD2".as_bytes()), PublicKey { x: [59, 138, 16, 199, 146, 149, 71, 143, 94, 127, 25, 1, 162, 228, 184, 215, 203, 220, 235, 21, 41, 33, 216, 112, 248, 102, 72, 152, 163, 49, 172, 95], y: [51, 182, 20, 69, 1, 249, 84, 59, 113, 10, 107, 119, 201, 151, 103, 35, 196, 16, 120, 31, 187, 246, 176, 161, 198, 207, 224, 250, 92, 66, 111, 198] });
    // keys.insert(("FR03".as_bytes(), "DGD3".as_bytes()), PublicKey { x: [55, 152, 16, 192, 33, 173, 159, 201, 189, 22, 192, 94, 216, 123, 117, 41, 6, 192, 152, 237, 157, 117, 232, 196, 146, 11, 76, 213, 209, 49, 16, 196], y: [72, 231, 24, 233, 31, 232, 72, 209, 84, 243, 199, 48, 186, 224, 53, 15, 189, 32, 79, 0, 153, 144, 88, 69, 95, 210, 122, 210, 117, 224, 31, 64] });
    // keys.insert(("FR03".as_bytes(), "DGD4".as_bytes()), PublicKey { x: [163, 20, 86, 114, 108, 18, 29, 0, 23, 39, 230, 172, 195, 219, 246, 46, 72, 253, 83, 63, 172, 28, 164, 55, 168, 48, 19, 47, 111, 201, 196, 41], y: [79, 206, 189, 154, 129, 188, 56, 24, 38, 170, 254, 243, 185, 57, 178, 159, 166, 224, 79, 207, 174, 185, 79, 129, 153, 226, 41, 213, 147, 84, 199, 133] });
    // keys.insert(("FR03".as_bytes(), "DGD5".as_bytes()), PublicKey { x: [106, 9, 178, 240, 227, 126, 76, 60, 123, 111, 169, 254, 201, 18, 98, 180, 150, 237, 5, 96, 172, 55, 15, 181, 215, 53, 165, 20, 71, 99, 59, 189], y: [37, 190, 51, 142, 182, 89, 210, 52, 71, 20, 230, 145, 56, 159, 54, 220, 150, 215, 205, 89, 31, 175, 233, 155, 152, 126, 123, 237, 66, 49, 25, 110] });
    // keys.insert(("FR03".as_bytes(), "DGD6".as_bytes()), PublicKey { x: [125, 224, 171, 252, 233, 249, 223, 30, 165, 157, 216, 9, 251, 218, 101, 131, 148, 166, 84, 109, 191, 234, 107, 171, 57, 136, 46, 38, 78, 85, 190, 79], y: [85, 75, 226, 171, 188, 115, 107, 179, 131, 228, 54, 205, 177, 128, 2, 39, 248, 229, 119, 241, 179, 216, 247, 234, 252, 97, 7, 24, 186, 111, 163, 98] });
    // keys.insert(("FR03".as_bytes(), "AHP1".as_bytes()), PublicKey { x: [62, 124, 73, 158, 220, 13, 194, 103, 189, 184, 116, 154, 178, 97, 133, 23, 7, 66, 208, 85, 141, 18, 155, 156, 131, 56, 99, 175, 239, 192, 103, 165], y: [46, 78, 109, 228, 47, 122, 32, 17, 64, 48, 41, 77, 45, 74, 17, 21, 153, 147, 74, 227, 249, 76, 211, 152, 126, 209, 155, 237, 110, 130, 76, 252] });
    // keys.insert(("FR03".as_bytes(), "AHP2".as_bytes()), PublicKey { x: [57, 133, 32, 155, 31, 41, 42, 237, 20, 111, 42, 144, 254, 75, 120, 248, 245, 210, 165, 74, 107, 144, 237, 152, 44, 121, 179, 206, 131, 122, 233, 120], y: [195, 91, 64, 39, 75, 53, 232, 172, 83, 222, 231, 158, 169, 239, 117, 90, 194, 166, 168, 203, 122, 144, 40, 50, 3, 7, 173, 136, 5, 133, 129, 184] });
    // keys.insert(("FR03".as_bytes(), "AV01".as_bytes()), PublicKey { x: [213, 63, 110, 27, 102, 196, 63, 187, 150, 52, 62, 145, 79, 249, 73, 179, 108, 187, 243, 176, 100, 16, 154, 17, 48, 194, 215, 190, 163, 202, 20, 80], y: [183, 114, 74, 133, 0, 249, 197, 141, 184, 175, 254, 135, 101, 88, 125, 56, 107, 83, 253, 10, 246, 130, 71, 17, 183, 212, 83, 4, 56, 86, 114, 92] });
    // keys.insert(("FR03".as_bytes(), "AV02".as_bytes()), PublicKey { x: [222, 50, 250, 205, 13, 26, 66, 63, 94, 36, 117, 48, 225, 80, 199, 7, 219, 12, 162, 248, 139, 84, 137, 64, 14, 122, 1, 192, 46, 55, 49, 223], y: [41, 247, 14, 185, 231, 61, 155, 14, 22, 4, 17, 168, 208, 217, 169, 144, 206, 223, 158, 83, 177, 221, 90, 187, 234, 99, 109, 195, 163, 221, 72, 206] });
    // keys.insert(("FR03".as_bytes(), "ING1".as_bytes()), PublicKey { x: [104, 195, 149, 152, 174, 5, 2, 86, 30, 83, 203, 84, 26, 148, 32, 182, 155, 139, 131, 4, 167, 253, 170, 215, 255, 137, 109, 42, 223, 240, 96, 42], y: [37, 123, 186, 193, 224, 64, 145, 46, 212, 135, 225, 218, 38, 29, 79, 217, 213, 200, 212, 153, 87, 242, 24, 126, 141, 113, 186, 22, 175, 43, 61, 195] });
    // keys.insert(("FR03".as_bytes(), "BDF1".as_bytes()), PublicKey { x: [227, 131, 34, 217, 124, 12, 47, 144, 7, 94, 166, 187, 56, 68, 199, 246, 21, 228, 163, 160, 68, 71, 173, 242, 230, 134, 172, 152, 235, 26, 33, 233], y: [254, 164, 6, 250, 85, 242, 213, 70, 8, 0, 9, 159, 40, 217, 13, 91, 37, 139, 79, 158, 215, 64, 243, 50, 100, 147, 90, 35, 150, 219, 118, 89] });
    // keys.insert(("FR03".as_bytes(), "ASP0".as_bytes()), PublicKey { x: [245, 23, 52, 99, 241, 46, 138, 119, 64, 108, 137, 44, 7, 238, 16, 202, 212, 112, 181, 236, 158, 144, 18, 0, 130, 192, 174, 48, 144, 51, 243, 70], y: [116, 177, 69, 71, 10, 104, 187, 60, 250, 11, 221, 1, 35, 113, 8, 173, 41, 20, 21, 163, 212, 5, 15, 229, 88, 38, 215, 166, 99, 161, 53, 194] });
    // keys.insert(("FR03".as_bytes(), "DSR3".as_bytes()), PublicKey { x: [25, 241, 142, 192, 207, 70, 26, 27, 62, 190, 137, 106, 70, 118, 167, 165, 225, 208, 190, 3, 49, 148, 128, 107, 73, 191, 238, 2, 192, 173, 225, 158], y: [189, 103, 166, 100, 204, 18, 60, 251, 119, 126, 6, 29, 172, 148, 29, 61, 103, 57, 140, 201, 10, 32, 67, 120, 150, 245, 185, 134, 210, 3, 144, 107] });
    // keys.insert(("FR03".as_bytes(), "SAG1".as_bytes()), PublicKey { x: [107, 112, 76, 179, 10, 80, 68, 239, 126, 171, 201, 189, 184, 31, 10, 20, 4, 2, 112, 236, 238, 240, 246, 163, 202, 24, 43, 148, 197, 115, 54, 98], y: [171, 222, 13, 37, 173, 251, 120, 144, 33, 149, 6, 9, 99, 104, 185, 203, 112, 25, 168, 139, 245, 55, 27, 132, 41, 196, 60, 142, 139, 114, 196, 132] });
    // keys.insert(("FR03".as_bytes(), "DSR4".as_bytes()), PublicKey { x: [146, 192, 204, 97, 216, 29, 194, 240, 225, 137, 228, 33, 132, 164, 97, 49, 7, 14, 97, 96, 182, 68, 8, 140, 98, 248, 225, 129, 182, 51, 200, 86], y: [57, 206, 6, 49, 225, 2, 245, 54, 28, 132, 156, 131, 235, 116, 43, 126, 104, 244, 238, 247, 68, 164, 1, 125, 158, 50, 71, 247, 110, 201, 100, 112] });
    // keys.insert(("FR03".as_bytes(), "DSR5".as_bytes()), PublicKey { x: [25, 241, 142, 192, 207, 70, 26, 27, 62, 190, 137, 106, 70, 118, 167, 165, 225, 208, 190, 3, 49, 148, 128, 107, 73, 191, 238, 2, 192, 173, 225, 158], y: [189, 103, 166, 100, 204, 18, 60, 251, 119, 126, 6, 29, 172, 148, 29, 61, 103, 57, 140, 201, 10, 32, 67, 120, 150, 245, 185, 134, 210, 3, 144, 107] });
    // keys.insert(("FR03".as_bytes(), "AGR2".as_bytes()), PublicKey { x: [41, 139, 21, 84, 139, 244, 141, 211, 64, 226, 102, 239, 45, 83, 65, 34, 1, 178, 103, 60, 34, 241, 188, 184, 165, 223, 191, 171, 165, 231, 88, 239], y: [227, 144, 239, 91, 70, 145, 89, 154, 149, 246, 28, 144, 156, 14, 45, 234, 40, 78, 121, 154, 197, 76, 40, 187, 92, 146, 138, 216, 255, 103, 189, 251] });
    // keys.insert(("FR03".as_bytes(), "SNC2".as_bytes()), PublicKey { x: [112, 143, 83, 116, 26, 26, 97, 196, 61, 118, 53, 195, 249, 12, 158, 138, 243, 56, 249, 252, 78, 102, 180, 210, 9, 179, 42, 221, 92, 31, 213, 80], y: [60, 196, 26, 113, 135, 124, 121, 134, 123, 38, 5, 184, 90, 201, 207, 139, 250, 109, 175, 209, 115, 29, 146, 128, 68, 34, 172, 245, 116, 142, 210, 183] });
    // keys.insert(("FR03".as_bytes(), "SNC3".as_bytes()), PublicKey { x: [91, 172, 79, 60, 94, 134, 170, 125, 201, 229, 101, 61, 161, 149, 64, 0, 100, 197, 83, 98, 73, 107, 34, 47, 166, 40, 94, 221, 68, 166, 31, 155], y: [91, 172, 130, 71, 3, 195, 110, 234, 148, 129, 145, 71, 85, 238, 18, 227, 141, 57, 56, 139, 100, 17, 61, 164, 22, 151, 172, 207, 88, 71, 3, 64] });
    // keys.insert(("FR03".as_bytes(), "CNO3".as_bytes()), PublicKey { x: [18, 127, 62, 109, 113, 110, 2, 68, 148, 36, 240, 72, 87, 157, 209, 201, 141, 105, 126, 60, 57, 32, 123, 47, 129, 83, 43, 209, 240, 204, 73, 48], y: [61, 63, 188, 230, 21, 165, 150, 242, 191, 151, 108, 147, 44, 83, 6, 184, 35, 113, 83, 102, 241, 26, 106, 36, 190, 249, 205, 75, 21, 163, 250, 67] });
    // keys.insert(("FR03".as_bytes(), "EDF8".as_bytes()), PublicKey { x: [149, 184, 82, 92, 110, 199, 151, 216, 146, 3, 244, 72, 110, 194, 206, 208, 46, 131, 74, 136, 83, 88, 59, 185, 61, 144, 252, 64, 244, 198, 139, 111], y: [131, 70, 110, 124, 200, 62, 114, 132, 55, 234, 203, 180, 135, 123, 252, 209, 224, 98, 10, 71, 50, 238, 187, 199, 51, 166, 86, 48, 8, 82, 182, 217] });
    // keys.insert(("FR03".as_bytes(), "EDF9".as_bytes()), PublicKey { x: [223, 117, 38, 17, 201, 172, 92, 100, 245, 200, 26, 45, 20, 223, 179, 122, 163, 65, 100, 241, 50, 201, 89, 191, 119, 2, 141, 28, 146, 130, 128, 141], y: [180, 181, 94, 145, 223, 12, 160, 215, 44, 47, 163, 48, 140, 95, 123, 245, 209, 222, 251, 69, 108, 12, 224, 145, 118, 147, 208, 98, 133, 216, 175, 225] });
    // keys.insert(("FR04".as_bytes(), "0000".as_bytes()), PublicKey { x: [162, 151, 150, 203, 29, 176, 17, 112, 35, 70, 39, 50, 153, 27, 38, 216, 85, 11, 30, 176, 200, 28, 133, 52, 199, 244, 10, 232, 205, 192, 244, 177], y: [64, 144, 39, 93, 103, 243, 102, 219, 108, 146, 81, 20, 76, 123, 8, 91, 140, 34, 236, 154, 11, 152, 106, 160, 80, 137, 59, 74, 247, 80, 116, 0] });
    // keys.insert(("FR04".as_bytes(), "ULR1".as_bytes()), PublicKey { x: [109, 98, 64, 252, 124, 182, 40, 96, 166, 95, 158, 241, 53, 166, 149, 52, 36, 249, 102, 61, 222, 128, 25, 42, 205, 86, 173, 164, 31, 49, 190, 237], y: [238, 202, 120, 197, 99, 63, 5, 69, 110, 83, 151, 172, 41, 192, 67, 25, 47, 126, 82, 146, 22, 229, 84, 33, 210, 32, 147, 229, 143, 163, 99, 171] });
    // keys.insert(("FR04".as_bytes(), "IN00".as_bytes()), PublicKey { x: [2, 16, 81, 139, 116, 174, 52, 92, 116, 175, 233, 87, 142, 29, 42, 19, 152, 98, 228, 40, 16, 163, 219, 84, 154, 202, 48, 164, 197, 20, 5, 240], y: [180, 97, 173, 53, 189, 96, 40, 164, 59, 124, 71, 233, 247, 140, 43, 138, 163, 223, 21, 199, 96, 71, 224, 208, 116, 71, 89, 173, 236, 205, 246, 1] });
    // keys.insert(("FR04".as_bytes(), "BYT0".as_bytes()), PublicKey { x: [196, 4, 184, 174, 109, 137, 120, 186, 43, 29, 163, 85, 204, 61, 214, 180, 244, 175, 199, 1, 33, 123, 201, 181, 7, 205, 7, 92, 224, 73, 37, 114], y: [120, 15, 20, 68, 16, 60, 153, 201, 118, 131, 73, 56, 244, 224, 222, 149, 228, 16, 179, 120, 101, 71, 47, 112, 116, 154, 191, 151, 77, 239, 215, 140] });
    // keys.insert(("FR04".as_bytes(), "MI00".as_bytes()), PublicKey { x: [240, 109, 230, 177, 34, 137, 206, 131, 222, 70, 149, 226, 214, 176, 145, 163, 19, 29, 133, 174, 78, 220, 151, 84, 60, 184, 80, 193, 137, 190, 238, 119], y: [201, 131, 157, 112, 102, 212, 238, 205, 3, 34, 77, 193, 72, 3, 206, 142, 20, 204, 0, 47, 211, 73, 51, 216, 35, 40, 51, 195, 161, 47, 24, 51] });
    // keys.insert(("FR04".as_bytes(), "ULR2".as_bytes()), PublicKey { x: [234, 182, 193, 150, 109, 143, 144, 7, 226, 91, 126, 91, 53, 143, 30, 229, 215, 112, 255, 187, 68, 191, 205, 75, 138, 132, 134, 54, 140, 250, 116, 33], y: [108, 76, 156, 177, 251, 0, 58, 44, 230, 182, 56, 64, 44, 109, 187, 86, 95, 247, 203, 172, 175, 141, 130, 164, 149, 64, 84, 222, 167, 112, 244, 155] });
    // keys.insert(("FR04".as_bytes(), "INC0".as_bytes()), PublicKey { x: [164, 220, 192, 135, 108, 140, 28, 115, 126, 3, 72, 86, 230, 187, 208, 231, 6, 177, 78, 71, 254, 5, 40, 57, 165, 94, 21, 61, 177, 177, 31, 16], y: [84, 150, 144, 7, 84, 9, 47, 165, 255, 223, 72, 87, 54, 28, 182, 160, 154, 147, 130, 230, 194, 179, 225, 88, 98, 251, 230, 63, 211, 216, 209, 202] });
    // keys.insert(("FR04".as_bytes(), "INV0".as_bytes()), PublicKey { x: [248, 182, 111, 81, 54, 106, 248, 49, 1, 181, 64, 201, 145, 222, 200, 212, 145, 117, 145, 134, 208, 87, 187, 194, 14, 67, 208, 183, 0, 217, 62, 33], y: [187, 66, 176, 202, 69, 4, 47, 134, 192, 205, 136, 143, 245, 89, 30, 198, 250, 136, 246, 6, 207, 244, 29, 178, 217, 254, 204, 119, 121, 197, 20, 243] });
    // keys.insert(("FR04".as_bytes(), "MI01".as_bytes()), PublicKey { x: [60, 232, 220, 179, 102, 150, 229, 115, 129, 220, 18, 101, 247, 74, 225, 177, 89, 196, 0, 234, 165, 22, 246, 109, 30, 12, 14, 16, 216, 144, 165, 107], y: [235, 152, 229, 62, 163, 82, 69, 224, 26, 192, 246, 60, 142, 0, 107, 131, 248, 114, 243, 104, 99, 158, 209, 249, 58, 42, 240, 44, 109, 131, 250, 191] });
    // keys.insert(("FR04".as_bytes(), "INS0".as_bytes()), PublicKey { x: [97, 9, 218, 74, 45, 36, 102, 28, 229, 208, 121, 200, 106, 226, 121, 176, 169, 201, 118, 255, 100, 236, 2, 18, 14, 28, 137, 181, 45, 128, 51, 214], y: [65, 126, 75, 255, 175, 89, 127, 77, 171, 0, 195, 93, 170, 88, 136, 205, 78, 5, 239, 167, 52, 105, 42, 114, 129, 90, 109, 93, 240, 203, 28, 113] });
    // keys.insert(("FR04".as_bytes(), "BYT1".as_bytes()), PublicKey { x: [225, 231, 8, 104, 116, 195, 44, 8, 80, 172, 158, 31, 219, 16, 115, 192, 10, 83, 126, 172, 85, 15, 109, 164, 143, 14, 7, 233, 25, 133, 29, 123], y: [132, 241, 171, 115, 34, 201, 192, 146, 152, 55, 34, 184, 139, 183, 19, 200, 188, 20, 217, 12, 192, 232, 149, 42, 4, 173, 19, 41, 33, 204, 36, 99] });
    // keys.insert(("FR04".as_bytes(), "IN01".as_bytes()), PublicKey { x: [249, 35, 77, 52, 252, 47, 249, 136, 19, 85, 157, 34, 56, 9, 37, 114, 89, 47, 242, 128, 103, 207, 71, 148, 97, 182, 58, 123, 129, 87, 104, 28], y: [35, 109, 31, 182, 249, 140, 12, 223, 195, 202, 137, 63, 42, 83, 75, 167, 140, 136, 12, 161, 209, 245, 1, 6, 119, 13, 139, 113, 154, 96, 53, 255] });
    // keys.insert(("FR04".as_bytes(), "ADE0".as_bytes()), PublicKey { x: [230, 71, 85, 196, 116, 46, 255, 139, 179, 189, 185, 207, 26, 162, 116, 103, 178, 74, 214, 151, 181, 254, 94, 254, 6, 120, 159, 197, 42, 182, 134, 90], y: [9, 18, 184, 23, 16, 212, 12, 204, 231, 161, 154, 95, 238, 182, 65, 112, 20, 252, 243, 151, 246, 13, 37, 19, 60, 129, 182, 80, 204, 91, 236, 102] });
    // keys.insert(("FR04".as_bytes(), "MI02".as_bytes()), PublicKey { x: [211, 149, 138, 19, 118, 235, 92, 169, 30, 231, 200, 75, 239, 252, 63, 120, 85, 220, 180, 187, 169, 132, 87, 226, 54, 163, 60, 245, 217, 121, 35, 3], y: [5, 241, 113, 94, 220, 33, 140, 90, 135, 14, 110, 131, 79, 169, 23, 13, 80, 192, 252, 184, 249, 235, 31, 90, 50, 234, 193, 158, 79, 73, 163, 193] });
    // keys.insert(("FR04".as_bytes(), "BYT2".as_bytes()), PublicKey { x: [151, 196, 7, 65, 59, 5, 152, 229, 18, 145, 27, 170, 9, 95, 130, 188, 139, 232, 142, 165, 45, 165, 169, 158, 189, 79, 183, 73, 8, 77, 4, 212], y: [129, 19, 170, 236, 22, 163, 200, 73, 169, 43, 66, 209, 183, 48, 101, 0, 251, 209, 213, 237, 231, 56, 41, 170, 160, 69, 180, 82, 187, 187, 102, 72] });
    // keys.insert(("FR04".as_bytes(), "FPE0".as_bytes()), PublicKey { x: [148, 41, 2, 148, 162, 29, 98, 135, 21, 160, 118, 218, 162, 94, 2, 173, 224, 41, 163, 155, 224, 58, 240, 87, 160, 88, 162, 121, 216, 151, 208, 201], y: [31, 146, 145, 7, 137, 33, 164, 63, 71, 192, 46, 119, 227, 171, 251, 10, 172, 176, 249, 196, 208, 128, 144, 202, 155, 213, 105, 1, 51, 203, 87, 51] });
    // keys.insert(("FR04".as_bytes(), "DSR0".as_bytes()), PublicKey { x: [24, 195, 136, 42, 234, 245, 120, 13, 80, 14, 184, 59, 111, 76, 57, 229, 82, 203, 111, 174, 14, 60, 11, 67, 209, 181, 131, 81, 42, 67, 190, 77], y: [136, 245, 212, 119, 151, 11, 149, 34, 4, 30, 113, 139, 90, 249, 22, 107, 146, 249, 81, 106, 22, 40, 210, 25, 91, 253, 15, 162, 74, 12, 15, 72] });
    // keys.insert(("FR04".as_bytes(), "INS1".as_bytes()), PublicKey { x: [99, 161, 65, 232, 81, 146, 27, 214, 140, 4, 22, 132, 246, 49, 88, 189, 240, 211, 128, 158, 19, 210, 148, 108, 88, 226, 60, 161, 252, 214, 24, 137], y: [175, 18, 56, 165, 64, 88, 108, 13, 112, 35, 16, 52, 149, 87, 72, 173, 255, 116, 83, 231, 14, 83, 219, 4, 120, 204, 222, 171, 15, 28, 201, 251] });
    // keys.insert(("FR04".as_bytes(), "INC1".as_bytes()), PublicKey { x: [174, 153, 6, 114, 229, 171, 20, 254, 14, 148, 155, 75, 132, 136, 177, 160, 58, 3, 2, 53, 171, 195, 164, 45, 104, 71, 172, 251, 77, 162, 248, 201], y: [76, 128, 147, 0, 10, 242, 47, 11, 216, 149, 217, 28, 31, 27, 67, 86, 70, 99, 170, 210, 216, 181, 218, 18, 184, 14, 134, 84, 212, 49, 177, 160] });
    // keys.insert(("FR04".as_bytes(), "INV2".as_bytes()), PublicKey { x: [221, 40, 36, 34, 206, 133, 214, 201, 163, 221, 2, 138, 237, 27, 150, 41, 22, 72, 44, 43, 230, 170, 71, 45, 18, 166, 57, 230, 204, 54, 136, 33], y: [93, 178, 97, 148, 78, 74, 194, 217, 184, 181, 114, 6, 42, 96, 194, 107, 226, 108, 37, 83, 35, 224, 120, 86, 149, 48, 161, 174, 104, 181, 101, 59] });
    // keys.insert(("FR04".as_bytes(), "FPE1".as_bytes()), PublicKey { x: [97, 145, 155, 66, 25, 85, 128, 242, 97, 74, 234, 48, 15, 183, 187, 178, 168, 238, 4, 255, 27, 26, 186, 131, 105, 169, 97, 6, 43, 19, 137, 56], y: [237, 198, 243, 252, 57, 65, 1, 62, 142, 116, 213, 4, 190, 59, 19, 191, 82, 231, 171, 190, 107, 46, 24, 178, 208, 183, 72, 239, 244, 26, 89, 83] });
    // keys.insert(("FR04".as_bytes(), "MI03".as_bytes()), PublicKey { x: [69, 161, 76, 75, 178, 98, 15, 56, 102, 11, 203, 12, 253, 86, 69, 187, 171, 196, 226, 254, 59, 141, 47, 87, 247, 134, 4, 220, 189, 128, 54, 113], y: [173, 85, 100, 89, 34, 28, 11, 192, 236, 126, 127, 108, 216, 119, 143, 240, 190, 151, 23, 73, 35, 140, 68, 3, 142, 59, 225, 194, 91, 19, 119, 149] });
    // keys.insert(("FR04".as_bytes(), "DGE0".as_bytes()), PublicKey { x: [34, 36, 143, 48, 24, 239, 243, 160, 56, 148, 89, 208, 187, 221, 54, 83, 23, 99, 204, 44, 244, 149, 251, 33, 46, 228, 74, 45, 210, 97, 172, 64], y: [102, 36, 147, 160, 77, 206, 14, 126, 246, 77, 4, 182, 50, 194, 36, 125, 3, 63, 28, 225, 18, 58, 158, 194, 44, 1, 41, 1, 29, 30, 241, 123] });
    // keys.insert(("FR04".as_bytes(), "ADE1".as_bytes()), PublicKey { x: [16, 18, 175, 40, 31, 64, 183, 165, 251, 56, 174, 251, 78, 32, 151, 102, 175, 33, 120, 42, 16, 86, 26, 157, 46, 162, 8, 224, 180, 232, 62, 194], y: [35, 34, 221, 192, 0, 234, 61, 176, 223, 177, 76, 128, 89, 70, 54, 2, 93, 191, 159, 18, 137, 181, 154, 250, 49, 30, 114, 225, 196, 98, 235, 216] });
    // keys.insert(("FR04".as_bytes(), "BYT3".as_bytes()), PublicKey { x: [79, 9, 201, 44, 200, 155, 37, 205, 183, 154, 218, 82, 202, 188, 139, 249, 124, 31, 180, 110, 239, 54, 96, 5, 121, 92, 101, 134, 253, 48, 149, 202], y: [12, 201, 110, 47, 43, 175, 1, 116, 135, 244, 135, 180, 218, 160, 2, 6, 147, 185, 15, 250, 27, 185, 136, 143, 197, 210, 188, 213, 180, 251, 168, 232] });
    // keys.insert(("FR04".as_bytes(), "IN02".as_bytes()), PublicKey { x: [25, 26, 85, 152, 115, 149, 74, 103, 207, 78, 247, 168, 79, 18, 223, 139, 235, 254, 167, 133, 198, 130, 108, 119, 249, 135, 185, 110, 58, 59, 193, 23], y: [61, 77, 205, 42, 53, 174, 200, 23, 140, 240, 164, 124, 101, 185, 69, 152, 223, 158, 9, 3, 160, 62, 171, 172, 5, 11, 67, 202, 255, 34, 185, 43] });
    // keys.insert(("FR04".as_bytes(), "OFB0".as_bytes()), PublicKey { x: [5, 237, 51, 45, 100, 19, 1, 223, 113, 106, 254, 93, 233, 233, 191, 91, 106, 30, 23, 208, 244, 78, 152, 138, 68, 53, 137, 208, 138, 102, 226, 116], y: [78, 189, 22, 82, 220, 155, 199, 106, 2, 129, 149, 129, 184, 183, 88, 155, 125, 27, 77, 23, 182, 227, 15, 25, 246, 147, 154, 109, 31, 36, 87, 217] });
    // keys.insert(("FR04".as_bytes(), "DSR1".as_bytes()), PublicKey { x: [142, 41, 158, 145, 113, 148, 55, 236, 65, 180, 249, 203, 149, 138, 155, 144, 6, 20, 155, 81, 205, 108, 167, 54, 120, 249, 32, 205, 124, 80, 237, 244], y: [222, 5, 39, 56, 0, 44, 231, 148, 224, 47, 86, 155, 246, 221, 214, 120, 29, 70, 19, 19, 17, 92, 209, 147, 116, 176, 137, 192, 165, 77, 161, 136] });
    // keys.insert(("FR04".as_bytes(), "DGE1".as_bytes()), PublicKey { x: [86, 105, 178, 46, 147, 23, 64, 183, 166, 135, 73, 104, 147, 101, 25, 158, 62, 115, 80, 243, 24, 70, 134, 185, 60, 105, 180, 237, 8, 61, 227, 29], y: [248, 191, 178, 201, 170, 148, 180, 18, 20, 116, 118, 188, 129, 185, 169, 39, 39, 129, 108, 5, 12, 61, 160, 2, 40, 167, 73, 211, 93, 14, 39, 35] });
    // keys.insert(("FR04".as_bytes(), "FRE0".as_bytes()), PublicKey { x: [15, 206, 106, 60, 29, 149, 251, 170, 234, 32, 105, 43, 250, 3, 162, 239, 86, 143, 65, 194, 251, 68, 114, 153, 218, 38, 164, 25, 93, 39, 120, 155], y: [92, 59, 27, 249, 220, 180, 76, 35, 236, 8, 118, 11, 235, 35, 204, 83, 199, 237, 233, 233, 225, 112, 100, 99, 65, 206, 72, 66, 187, 212, 150, 128] });
    // keys.insert(("FR04".as_bytes(), "DGE2".as_bytes()), PublicKey { x: [144, 2, 193, 109, 102, 124, 162, 14, 179, 241, 31, 68, 19, 193, 38, 145, 244, 230, 12, 76, 81, 228, 4, 140, 210, 126, 107, 118, 197, 69, 227, 151], y: [109, 157, 125, 68, 31, 35, 240, 5, 107, 174, 145, 70, 221, 51, 164, 13, 212, 174, 168, 235, 116, 174, 124, 142, 186, 147, 163, 239, 146, 0, 228, 219] });
    // keys.insert(("FR04".as_bytes(), "EPS0".as_bytes()), PublicKey { x: [142, 52, 84, 89, 52, 139, 141, 217, 133, 108, 95, 47, 239, 44, 239, 132, 140, 194, 23, 71, 42, 136, 95, 181, 21, 223, 140, 24, 255, 83, 152, 177], y: [173, 12, 249, 112, 143, 170, 157, 69, 193, 85, 199, 200, 153, 143, 191, 229, 197, 180, 208, 99, 28, 136, 225, 150, 53, 39, 38, 15, 4, 139, 11, 138] });
    // keys.insert(("FR04".as_bytes(), "DSR2".as_bytes()), PublicKey { x: [42, 69, 254, 14, 44, 77, 233, 154, 24, 254, 184, 193, 206, 113, 60, 184, 53, 3, 2, 43, 82, 102, 161, 235, 245, 76, 146, 55, 130, 147, 148, 36], y: [25, 129, 120, 50, 157, 212, 202, 128, 68, 230, 113, 129, 40, 35, 69, 84, 75, 58, 97, 198, 11, 165, 216, 227, 223, 168, 14, 146, 129, 214, 141, 27] });
    // keys.insert(("FR04".as_bytes(), "DSR3".as_bytes()), PublicKey { x: [110, 163, 200, 145, 78, 28, 243, 111, 202, 222, 225, 221, 190, 131, 223, 5, 15, 142, 244, 219, 133, 34, 161, 169, 160, 14, 249, 158, 187, 54, 126, 171], y: [25, 159, 163, 149, 37, 247, 197, 102, 253, 202, 243, 209, 7, 249, 164, 123, 90, 130, 30, 174, 103, 148, 73, 183, 144, 122, 234, 239, 139, 1, 237, 107] });
    // keys.insert(("FR04".as_bytes(), "LTR0".as_bytes()), PublicKey { x: [72, 130, 28, 21, 208, 191, 17, 197, 61, 63, 54, 141, 160, 158, 65, 141, 204, 173, 57, 158, 16, 105, 68, 225, 29, 8, 151, 41, 119, 90, 84, 17], y: [140, 209, 49, 75, 241, 244, 93, 202, 191, 86, 40, 194, 231, 58, 63, 159, 114, 119, 116, 214, 249, 188, 163, 16, 165, 152, 159, 10, 146, 178, 124, 170] });
    // keys.insert(("FR04".as_bytes(), "INS2".as_bytes()), PublicKey { x: [125, 154, 9, 73, 156, 62, 173, 187, 176, 9, 132, 156, 28, 249, 28, 140, 157, 219, 194, 127, 23, 132, 203, 92, 232, 122, 15, 187, 59, 61, 182, 213], y: [58, 22, 58, 107, 112, 120, 206, 20, 78, 146, 185, 98, 148, 90, 158, 135, 56, 63, 82, 254, 78, 202, 90, 191, 211, 170, 172, 8, 36, 48, 210, 218] });
    // keys.insert(("FR04".as_bytes(), "FPE2".as_bytes()), PublicKey { x: [89, 170, 127, 196, 236, 112, 6, 123, 118, 112, 188, 151, 56, 253, 145, 173, 156, 78, 98, 155, 146, 147, 220, 41, 78, 50, 233, 247, 57, 120, 16, 170], y: [242, 217, 101, 42, 145, 71, 75, 54, 61, 75, 54, 67, 254, 149, 120, 165, 216, 72, 206, 50, 20, 31, 145, 89, 150, 101, 143, 116, 118, 154, 71, 123] });
    // keys.insert(("FR04".as_bytes(), "INC2".as_bytes()), PublicKey { x: [148, 244, 206, 21, 117, 119, 175, 225, 206, 108, 155, 191, 195, 22, 230, 158, 57, 110, 101, 6, 170, 43, 229, 94, 221, 89, 247, 113, 237, 185, 234, 91], y: [198, 163, 107, 153, 3, 20, 192, 42, 162, 189, 179, 35, 116, 224, 175, 83, 166, 231, 170, 51, 159, 42, 149, 37, 157, 230, 249, 222, 2, 56, 186, 150] });
    // keys.insert(("FR04".as_bytes(), "INV3".as_bytes()), PublicKey { x: [213, 134, 108, 144, 53, 41, 79, 252, 64, 225, 129, 67, 54, 201, 38, 28, 32, 39, 196, 69, 53, 176, 216, 225, 92, 162, 234, 152, 250, 192, 19, 81], y: [99, 83, 105, 217, 228, 120, 2, 249, 177, 34, 164, 142, 180, 94, 62, 22, 110, 194, 206, 46, 7, 124, 251, 172, 113, 117, 245, 149, 36, 16, 191, 99] });
    // keys.insert(("FR04".as_bytes(), "FPE3".as_bytes()), PublicKey { x: [207, 172, 102, 171, 121, 104, 250, 93, 24, 152, 10, 79, 118, 34, 210, 191, 133, 240, 149, 21, 117, 170, 203, 69, 214, 66, 196, 172, 155, 182, 66, 188], y: [80, 117, 33, 59, 55, 45, 220, 77, 237, 134, 174, 192, 66, 11, 251, 168, 221, 126, 215, 99, 7, 97, 242, 25, 56, 125, 6, 212, 122, 73, 125, 22] });
    // keys.insert(("FR04".as_bytes(), "ADE2".as_bytes()), PublicKey { x: [116, 117, 19, 32, 156, 22, 199, 24, 133, 187, 236, 169, 138, 22, 186, 39, 57, 140, 10, 89, 176, 3, 240, 214, 3, 137, 83, 39, 172, 56, 233, 129], y: [193, 246, 78, 65, 152, 170, 90, 146, 188, 163, 29, 24, 231, 194, 219, 95, 64, 44, 12, 76, 188, 255, 49, 130, 203, 32, 23, 10, 167, 190, 131, 181] });
    // keys.insert(("FR04".as_bytes(), "MI04".as_bytes()), PublicKey { x: [33, 155, 64, 121, 30, 40, 116, 220, 221, 134, 45, 212, 59, 165, 204, 26, 253, 231, 170, 73, 154, 95, 206, 165, 36, 115, 141, 146, 61, 172, 253, 134], y: [18, 13, 239, 0, 131, 187, 82, 47, 199, 103, 196, 135, 244, 177, 198, 47, 61, 157, 142, 181, 37, 102, 11, 242, 15, 200, 153, 18, 96, 222, 193, 243] });
    // keys.insert(("FR04".as_bytes(), "DGE3".as_bytes()), PublicKey { x: [182, 146, 19, 95, 102, 239, 170, 88, 174, 35, 25, 100, 135, 56, 212, 42, 184, 26, 34, 47, 128, 140, 92, 183, 24, 128, 166, 198, 82, 72, 254, 237], y: [154, 2, 238, 252, 45, 29, 93, 156, 206, 172, 44, 163, 208, 40, 162, 253, 211, 255, 185, 198, 109, 98, 110, 45, 238, 193, 201, 123, 58, 250, 51, 233] });
    // keys.insert(("FR04".as_bytes(), "BYT4".as_bytes()), PublicKey { x: [102, 62, 80, 149, 169, 184, 95, 240, 159, 174, 130, 56, 113, 93, 200, 201, 33, 16, 45, 124, 139, 1, 120, 187, 240, 40, 57, 32, 109, 10, 71, 180], y: [125, 66, 130, 21, 85, 21, 230, 175, 131, 138, 216, 35, 211, 180, 153, 50, 95, 173, 114, 184, 121, 105, 202, 83, 63, 150, 80, 129, 243, 124, 134, 158] });
    // keys.insert(("FR04".as_bytes(), "LTR1".as_bytes()), PublicKey { x: [175, 209, 45, 243, 118, 51, 18, 5, 13, 215, 168, 175, 92, 163, 101, 123, 18, 53, 8, 115, 0, 181, 83, 5, 98, 83, 103, 103, 198, 226, 157, 29], y: [213, 172, 65, 101, 144, 173, 251, 215, 218, 232, 204, 18, 91, 62, 47, 19, 235, 91, 134, 113, 177, 101, 35, 220, 79, 17, 224, 2, 152, 87, 240, 15] });
    // keys.insert(("FR04".as_bytes(), "IN03".as_bytes()), PublicKey { x: [47, 160, 125, 129, 171, 72, 57, 105, 12, 119, 22, 226, 87, 145, 62, 118, 188, 181, 75, 49, 14, 104, 68, 186, 44, 24, 247, 139, 218, 13, 128, 113], y: [234, 122, 141, 193, 137, 46, 61, 136, 255, 156, 194, 123, 113, 173, 105, 77, 166, 130, 147, 187, 127, 131, 62, 112, 23, 111, 86, 50, 224, 128, 46, 15] });
    // keys.insert(("FR04".as_bytes(), "FPE4".as_bytes()), PublicKey { x: [219, 69, 45, 46, 77, 78, 31, 146, 90, 83, 149, 244, 200, 230, 66, 146, 46, 131, 154, 76, 207, 67, 50, 53, 206, 243, 77, 244, 11, 234, 246, 207], y: [66, 167, 181, 54, 218, 134, 249, 71, 3, 177, 3, 48, 139, 231, 69, 167, 175, 114, 203, 146, 117, 132, 23, 94, 83, 137, 234, 203, 30, 246, 7, 84] });
    // keys.insert(("FR04".as_bytes(), "DSR4".as_bytes()), PublicKey { x: [117, 170, 188, 186, 159, 226, 49, 159, 235, 105, 202, 95, 206, 22, 245, 249, 32, 103, 154, 29, 23, 155, 125, 105, 155, 222, 229, 32, 93, 8, 69, 230], y: [29, 86, 217, 137, 57, 211, 220, 245, 196, 201, 194, 196, 116, 23, 159, 255, 98, 86, 17, 202, 187, 84, 37, 17, 172, 245, 85, 242, 144, 58, 38, 18] });
    // keys.insert(("FR04".as_bytes(), "FPE5".as_bytes()), PublicKey { x: [32, 50, 93, 253, 211, 60, 82, 22, 193, 153, 117, 254, 93, 177, 149, 186, 23, 179, 107, 55, 35, 46, 97, 224, 208, 73, 114, 217, 49, 185, 54, 108], y: [137, 243, 146, 160, 189, 17, 238, 216, 187, 35, 9, 153, 186, 59, 58, 244, 40, 32, 29, 158, 58, 139, 9, 249, 3, 0, 36, 135, 135, 40, 29, 150] });
    // keys.insert(("FR04".as_bytes(), "FPE6".as_bytes()), PublicKey { x: [210, 9, 143, 56, 35, 103, 11, 215, 197, 52, 103, 68, 161, 121, 3, 71, 177, 147, 40, 59, 111, 47, 52, 4, 13, 231, 214, 215, 202, 75, 199, 182], y: [215, 57, 221, 200, 37, 132, 175, 131, 135, 4, 93, 165, 146, 155, 100, 89, 140, 189, 234, 190, 97, 174, 188, 26, 156, 19, 131, 114, 246, 218, 231, 242] });
    keys.insert(("FR04".as_bytes(), "FPE7".as_bytes()), PublicKey { x: [189, 70, 243, 118, 254, 254, 233, 71, 137, 37, 165, 101, 53, 183, 82, 204, 163, 226, 250, 78, 230, 233, 24, 252, 82, 33, 34, 21, 90, 23, 75, 1], y: [212, 69, 55, 134, 151, 248, 198, 82, 204, 70, 205, 15, 234, 207, 199, 36, 214, 24, 63, 179, 255, 31, 59, 50, 74, 6, 225, 148, 169, 207, 16, 124] });
    // keys.insert(("FR04".as_bytes(), "MI05".as_bytes()), PublicKey { x: [4, 248, 107, 74, 255, 184, 183, 203, 90, 83, 182, 53, 118, 70, 5, 119, 0, 140, 226, 141, 111, 5, 122, 80, 203, 125, 143, 9, 110, 56, 213, 33], y: [0, 188, 227, 170, 146, 26, 80, 91, 156, 97, 106, 58, 7, 184, 203, 97, 48, 81, 255, 125, 134, 227, 131, 80, 129, 111, 73, 247, 224, 127, 232, 242] });
    // keys.insert(("FR04".as_bytes(), "OFB1".as_bytes()), PublicKey { x: [26, 1, 243, 156, 50, 76, 56, 218, 39, 49, 49, 133, 111, 136, 111, 104, 53, 150, 247, 118, 209, 43, 157, 174, 211, 30, 99, 250, 85, 94, 225, 76], y: [171, 212, 16, 132, 250, 25, 237, 210, 58, 191, 203, 226, 247, 222, 216, 156, 178, 219, 8, 241, 154, 31, 218, 175, 148, 250, 86, 103, 225, 16, 174, 94] });
    // keys.insert(("FR04".as_bytes(), "FPE9".as_bytes()), PublicKey { x: [69, 136, 225, 243, 17, 91, 77, 75, 69, 92, 159, 234, 211, 176, 199, 142, 77, 49, 251, 145, 170, 169, 170, 235, 246, 79, 120, 22, 89, 104, 13, 173], y: [76, 212, 102, 77, 254, 136, 59, 39, 227, 85, 49, 8, 50, 22, 45, 78, 110, 238, 188, 5, 130, 187, 65, 9, 121, 153, 86, 65, 76, 30, 136, 229] });
    // keys.insert(("FR04".as_bytes(), "FPE8".as_bytes()), PublicKey { x: [240, 35, 254, 1, 74, 199, 61, 14, 17, 62, 251, 239, 57, 76, 80, 179, 133, 115, 142, 30, 237, 34, 235, 178, 233, 181, 164, 219, 28, 18, 210, 210], y: [194, 222, 79, 230, 206, 252, 35, 37, 177, 115, 227, 97, 121, 129, 194, 20, 246, 200, 87, 51, 246, 5, 45, 235, 9, 224, 222, 78, 235, 232, 66, 235] });
    keys.insert(("FR00".as_bytes(), "0001".as_bytes()), PublicKey { x: [169, 143, 13, 124, 205, 98, 128, 136, 147, 190, 196, 212, 54, 231, 157, 24, 52, 161, 214, 224, 1, 215, 15, 28, 76, 220, 205, 157, 158, 47, 226, 41], y: [247, 36, 5, 20, 232, 221, 192, 202, 152, 208, 199, 68, 12, 156, 196, 146, 132, 154, 15, 189, 167, 63, 195, 146, 244, 218, 10, 224, 127, 132, 194, 60] });
    keys.insert(("FR05".as_bytes(), "0001".as_bytes()), PublicKey { x: [86, 124, 231, 161, 237, 241, 19, 151, 249, 180, 23, 75, 231, 182, 210, 24, 149, 175, 22, 174, 33, 206, 199, 55, 32, 217, 16, 36, 44, 187, 134, 46], y: [18, 244, 129, 207, 135, 240, 110, 88, 51, 62, 197, 158, 146, 187, 108, 126, 124, 14, 99, 123, 64, 57, 25, 180, 8, 183, 66, 113, 16, 119, 203, 128] });

    keys
}

